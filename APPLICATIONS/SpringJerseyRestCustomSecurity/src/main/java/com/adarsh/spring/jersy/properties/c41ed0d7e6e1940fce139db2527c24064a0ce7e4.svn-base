PhpHttpUtility Component
========================

PhpHttpParamReader provides a uniform interface to fetch values from PHP super global variables
$_GET, $_POST, $_REQUEST, $_SESSION.

The class is a singleton class so that there's just one instance of the class available through
out the request life time.  You can configure hte class to throw exception (HttpParamReaderException)
if the key you are looking is not set in the super global variables.

First you include the file in your script wherever you need it and create its instance.

    require 'PhpHttpUtility/HttpParamReader.php';
    require 'PhpHttpUtility/HttpParamReaderException.php';

    // false instructs the class not to throw exception if key is not set in super global variables.
    $httpParamReader = HttpParamReader::getInstance (false);

    // Returns null if $_GET['someparam'] is not available.
    $getParam = $httpParamReader->fetchGetParam('someparam');

    // Returns 'DefaultValue' since $_GET['someparam'] is not available
    $defaultValue = $httpParamReader->fetchGetParam('someparam', 'DefaultValue');


    $httpParamReaderThrowsException = HttpParamReader::getInstance();

    try {
        $getParam = $httpParamReader->fetchGetParam('someparam');
    } catch (HttpParamReaderException $e) {
        echo $e->getMessage();
    }